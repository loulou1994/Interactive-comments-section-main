{"version":3,"sources":["script.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","rmScore","rmElement","mainContainer","document","querySelector","deleteBtns","querySelectorAll","scoreList","createdAtId","getData","_ref","data","fetch","json","loadContentMarkup","_ref2","content","JSON","parse","localStorage","getItem","setItem","stringify","comments","forEach","comment","replyMsg","replies","replyWrapper","user","username","loadComments","reply","userInputBox","currentUser","postUserBox","_ref3","userBox","replyTo","userData","_x","_x2","postUserComment","_ref4","mainNested","_x3","_x4","_x5","commentData","userMsg","userInput","subWrapper","theWrapper","divWrapper","createElement","articleEl","divEl","imgEl","spanEl","postDate","createDate","id","paragraph","scoreContainer","plusButton","imgEl_btn","spanEl_btn","minusButton","imgEl2_btn","buttonEl_2","imgEl_btn2","className","dataset","alt","src","image","webp","textContent","score","push","parseInt","addEventListener","e","commentContainer","currentTarget","parentElement","nestedUserBox","repliedUser","separatorBar","removeChild","style","gridRow","insertAdjacentElement","userResponded","classList","add","concat","replyingTo","appendChild","insertBefore","firstChild","addScore","append","youTag","btnContainer","deleteBtn","deleteIcon","editBtn","editIcon","scoresList","Array","from","body","indexOf","editCommentTask","lastChild","saveComment","replyBox","labelName","labelSpan","textInput","buttonSub","for","name","placeholder","type","remove","postListener","lastElementChild","scoreElements","pressedBtn","clickedScore","currentScore","minusScoreLimit","myPoint","saveScorContent","mainParent","paragraphEl","textAreaEl","updateBtn","respondedTo","firstElementChild","rows","nodeValue","updateComment","replaceChild","innerHTML","deleteComment","removeElement","trueOrFalse","splice","listOfScores","parent","checkValue","closest","scoreBtns","sepratorBar","lastScore","length","container","listOfComments","commentScored","scoreContent","update","commentsData","commentsTime","commentIndex","mainCommentId","find","elementIndex","updateIdsOnDel","currentTimeTerm","timePassed","convertedTime","dateTerms","postTimes","elapsedTime","Math","floor","Date","now","idDeleted","usersComments","idElements","element","btn"],"mappings":"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","file":"script.js","sourcesContent":["const mainContainer = document.querySelector(\"main\"); // Wraps the whole comments'section besides the user's input box\r\nconst deleteBtns = document.querySelectorAll(\".overlay button\"); // Buttons in the modal box on comment's deletion validation\r\n\r\nlet scoreList = []; // Storing every comment's score \r\nlet rmScore;\r\nlet rmElement; // The comment to delete on delete btn click\r\nlet createdAtId = 0;\r\n\r\n// Retrieve data from JSON file\r\nconst getData = async () => {\r\n  let data = await fetch(\"data.json\");\r\n  return await data.json();\r\n};\r\n\r\n// Load comments from JSON file.\r\nconst loadContentMarkup = async () => {\r\n  let content =  JSON.parse(localStorage.getItem('comments')) || await getData();\r\n\r\n  !localStorage.getItem('comments') && localStorage.setItem('comments', JSON.stringify(content));\r\n\r\n  content.comments.forEach(comment => {\r\n    const replyMsg = comment.replies;\r\n    const replyWrapper = comment.user.username === \"juliusomo\" ? loadComments(comment, null, true) : loadComments(comment);\r\n\r\n    if (replyMsg) {\r\n      replyMsg.forEach(reply => {\r\n        if(reply.user.username == \"juliusomo\"){\r\n          loadComments(reply, null, true, replyWrapper);\r\n        }else{\r\n          loadComments(reply, null, null, replyWrapper);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  userInputBox(content.currentUser);\r\n};\r\n\r\n// insert a user input box for a reply\r\nconst postUserBox = async (userBox, replyTo) => {\r\n  let userData = await getData();\r\n  userData = userData.currentUser;\r\n  userInputBox(userData, userBox, replyTo);\r\n};\r\n\r\n// Post comment / reply to one\r\nconst postUserComment = async (value, mainNested, replyTo) => {\r\n  let userData = await getData();\r\n  userData = userData.currentUser;\r\n  mainNested === mainContainer ? loadComments(userData, value, true) : loadComments(userData, value, true, mainNested, replyTo)\r\n};\r\n\r\n//Delete comment or not;\r\ndeleteBtns.forEach(btn => {\r\n  btn.addEventListener('click', deleteComment);\r\n});\r\n\r\nloadContentMarkup();\r\n\r\n// users' comment/reply box markup\r\nfunction loadComments(commentData, userMsg, userInput, subWrapper, replyTo) {\r\n  const theWrapper = subWrapper ? subWrapper : mainContainer;\r\n  const divWrapper = document.createElement(\"div\");\r\n  const articleEl = document.createElement(\"article\");\r\n  const divEl = document.createElement(\"div\");\r\n  const imgEl = document.createElement(\"img\");\r\n  const spanEl = document.createElement(\"span\");\r\n  const postDate = userMsg ? createDate(++createdAtId) : createDate(commentData.id);\r\n  const paragraph = document.createElement(\"p\");\r\n  const scoreContainer = document.createElement(\"div\");\r\n  const plusButton = document.createElement(\"button\");\r\n  const imgEl_btn = document.createElement(\"img\");\r\n  const spanEl_btn = document.createElement(\"span\");\r\n  const minusButton = document.createElement(\"button\");\r\n  const imgEl2_btn = document.createElement(\"img\");\r\n  const buttonEl_2 = userInput ? null : document.createElement(\"button\");\r\n  const imgEl_btn2 = document.createElement(\"img\");\r\n\r\n  divWrapper.className = subWrapper ? \"grid nested-inputBox\" : \"flow\";\r\n  divWrapper.dataset.id = userMsg ? createdAtId : commentData.id;\r\n  articleEl.className = \"grid pd-full card\";\r\n  divEl.className = \"flex card__user\";\r\n  imgEl.alt = \"alt\";\r\n  imgEl.src = (userInput && userMsg) ? commentData.image.webp : commentData.user.image.webp;\r\n  spanEl.className = \"fs-bold fs-300\";\r\n  spanEl.textContent = (userInput && userMsg) ? commentData.username : commentData.user.username;\r\n  paragraph.className = \"card__comment\";\r\n  paragraph.textContent = userMsg ? userMsg : commentData.content;\r\n  scoreContainer.className = \"card__comment-score flex blue-mod fs-bold bg-str-lt-gray \";\r\n  plusButton.dataset.score = \"plus\";\r\n  imgEl_btn.className = \"vote-button\";\r\n  imgEl_btn.alt = \"Upvote-button\";\r\n  imgEl_btn.src = \"./assets/icon-plus.svg\";\r\n  spanEl_btn.className = \"score\";\r\n  spanEl_btn.textContent = userMsg ? 0 : commentData.score;\r\n  minusButton.dataset.score = \"minus\";\r\n  imgEl2_btn.className = \"vote-button\";\r\n  imgEl2_btn.alt = \"downvote-button\";\r\n  imgEl2_btn.src = \"./assets/icon-minus.svg\";\r\n  imgEl_btn2.className = \"reply-icon\";\r\n  imgEl_btn2.alt = \"reply-icon\";\r\n  imgEl_btn2.src = \"./assets/icon-reply.svg\";\r\n  \r\n  if(!userMsg){\r\n    createdAtId = createdAtId < commentData.id ? commentData.id : createdAtId;\r\n    scoreList.push(parseInt(spanEl_btn.textContent));\r\n  }\r\n  \r\n  if (!userInput) {\r\n    buttonEl_2.className = \"card__user-btns custom-btn flex fs-bold blue-mod\";\r\n    buttonEl_2.textContent = \"Reply\";\r\n    \r\n    buttonEl_2.addEventListener('click', e => {\r\n      const commentContainer = e.currentTarget.parentElement;\r\n      const nestedUserBox = commentContainer.parentElement.querySelector('.card--user')\r\n      const repliedUser = commentContainer.querySelector('.fs-bold').textContent;\r\n      const separatorBar = commentContainer.parentElement.querySelector('.separation-bar') || null;\r\n\r\n      if (nestedUserBox){\r\n        commentContainer.parentElement.removeChild(nestedUserBox);\r\n        subWrapper ? separatorBar.style.gridRow = \"1 / 2\" : \"\";\r\n      } else {\r\n        subWrapper ? separatorBar.style.gridRow = \"1 / 3\" : \"\";\r\n        postUserBox(commentContainer, repliedUser);\r\n      }\r\n    });\r\n    \r\n    buttonEl_2.insertAdjacentElement(\"afterbegin\", imgEl_btn2);\r\n  }\r\n  \r\n  if (subWrapper){\r\n    const separatorBar = document.createElement(\"div\");\r\n    const userResponded = document.createElement('span');\r\n    \r\n    separatorBar.classList.add(\"separation-bar\");\r\n    userResponded.classList.add('respondedUser');\r\n    userResponded.textContent = replyTo ? `@${replyTo} ` : `@${commentData.replyingTo} `;\r\n    separatorBar.style.gridRow = \"1 / 2\";\r\n    divWrapper.appendChild(separatorBar);\r\n    paragraph.insertBefore(userResponded, paragraph.firstChild);\r\n  }\r\n  \r\n  plusButton.addEventListener(\"click\", addScore);\r\n  minusButton.addEventListener(\"click\", addScore);\r\n  \r\n  divEl.append(imgEl, spanEl, postDate);\r\n  plusButton.appendChild(imgEl_btn);\r\n  minusButton.appendChild(imgEl2_btn);\r\n  scoreContainer.append(plusButton, spanEl_btn, minusButton);\r\n  !userInput && articleEl.append(divEl, paragraph, scoreContainer, buttonEl_2);\r\n  divWrapper.appendChild(articleEl);\r\n  theWrapper.appendChild(divWrapper);\r\n  \r\n  if (userInput) {\r\n    const youTag = document.createElement('span');\r\n    const btnContainer = document.createElement(\"div\");\r\n    const deleteBtn = document.createElement(\"button\");\r\n    const deleteIcon = document.createElement(\"img\");\r\n    const editBtn = document.createElement(\"button\");\r\n    const editIcon = document.createElement(\"img\");\r\n    \r\n    youTag.classList.add(\"user-reply\");\r\n    btnContainer.classList.add(\"card__user-btns\", \"flex\")\r\n    deleteBtn.classList.add(\"flex\", \"custom-btn\", \"fs-bold\", \"red-sof\");\r\n    editBtn.classList.add(\"flex\", \"custom-btn\", \"fs-bold\", \"blue-mod\");\r\n    deleteBtn.textContent = \"Delete\";\r\n    editBtn.textContent = \"Edit\";\r\n    deleteIcon.src = \"./assets/icon-delete.svg\";\r\n    editIcon.src = \"./assets/icon-edit.svg\";\r\n    deleteIcon.alt = \"delete-icon\";\r\n    editIcon.alt = \"edit-icon\";\r\n    youTag.textContent = \"you\";\r\n    \r\n    deleteBtn.addEventListener('click', e => {\r\n      const scoresList = Array.from(document.querySelectorAll('.score'));\r\n      document.body.querySelector(\".overlay\").classList.add('open');\r\n      rmScore = scoresList.indexOf(e.currentTarget.parentElement.parentElement.querySelector('.score'));\r\n      rmElement = e.currentTarget.parentElement.parentElement;\r\n    });\r\n\r\n    editBtn.addEventListener('click', editCommentTask)\r\n\r\n    divEl.insertBefore(youTag, divEl.lastChild)\r\n    deleteBtn.appendChild(deleteIcon);\r\n    editBtn.appendChild(editIcon);\r\n    btnContainer.append(deleteBtn, editBtn);\r\n    articleEl.append(divEl, paragraph, scoreContainer, btnContainer);\r\n  }\r\n  \r\n  userMsg && saveComment(divWrapper, createdAtId, replyTo, userMsg, commentData.image.webp, commentData.username);\r\n\r\n  if (!subWrapper) {\r\n    return divWrapper;\r\n  }\r\n}\r\n// User input box markup to post commments\r\nfunction userInputBox(userData, replyBox, replyTo) {\r\n  const articleEl = document.createElement(\"article\");\r\n  const labelName = document.createElement(\"label\");\r\n  const labelSpan = document.createElement(\"span\");\r\n  const imgEl = document.createElement(\"img\");\r\n  const textInput = document.createElement(\"textarea\");\r\n  const buttonSub = document.createElement(\"button\");\r\n  \r\n  articleEl.className = \"container grid pd-full card card--user\";\r\n  labelName.for = \"input-user\";\r\n  labelName.className = \"profile-image card__label-image\";\r\n  labelSpan.textContent = userData.username;\r\n  imgEl.src = userData.image.webp;\r\n  imgEl.alt = \"user-photo\";\r\n  textInput.name = \"user-input\";\r\n  textInput.id = \"input-user\";\r\n  textInput.className = \"card__comment-input edit-text-box\";\r\n  textInput.placeholder = \"add comment...\";\r\n  buttonSub.type = \"submit\";\r\n  buttonSub.className = \"send-update-btn\";\r\n  buttonSub.textContent = replyTo ? \"REPLY\" : \"SEND\";\r\n\r\n  replyTo && articleEl.classList.remove('container');\r\n\r\n  buttonSub.addEventListener(\"click\", e => {\r\n    postListener(e, replyTo)\r\n  });\r\n\r\n  labelName.append(labelSpan, imgEl);\r\n  articleEl.append(labelName, textInput, buttonSub);\r\n  (replyBox) ? replyBox.insertAdjacentElement('afterend', articleEl) : document.body.insertBefore(articleEl, document.body.lastElementChild);\r\n}\r\n// In/decrement the score of a user's comment\r\nfunction addScore(e) {\r\n  const scoreElements = Array.from(document.querySelectorAll('.score'));\r\n  const pressedBtn = e.currentTarget.dataset.score;\r\n  const clickedScore = e.currentTarget.parentElement.querySelector(\".score\");\r\n  const currentScore = scoreList[scoreElements.indexOf(clickedScore)];\r\n  const minusScoreLimit = currentScore - 1;\r\n  const plusScoreLimit = currentScore + 1;\r\n  let myPoint = 0;\r\n  \r\n  if (pressedBtn === \"plus\") {\r\n    ++myPoint;\r\n  }else if (pressedBtn === \"minus\") {\r\n    --myPoint;\r\n  }\r\n\r\n  if(plusScoreLimit == clickedScore.textContent && pressedBtn === \"plus\"){\r\n    --myPoint;\r\n  }else if (minusScoreLimit == clickedScore.textContent && pressedBtn === \"minus\"){\r\n    ++myPoint;\r\n  }\r\n\r\n  clickedScore.textContent = parseInt(clickedScore.textContent) + myPoint;\r\n\r\n  saveScorContent(e.currentTarget.parentElement.parentElement, clickedScore.textContent);\r\n}\r\n// Edit the user's comment.\r\nfunction editCommentTask(e){\r\n  const mainParent = e.currentTarget.parentElement.parentElement;\r\n  const paragraphEl = mainParent.querySelector('p');\r\n  const textAreaEl = document.createElement('textarea');\r\n  const updateBtn = document.createElement('button');\r\n  \r\n  if(paragraphEl){\r\n    const respondedTo =  paragraphEl.firstElementChild;\r\n    mainParent.classList.add(\"card--edit\");\r\n    textAreaEl.classList.add(paragraphEl.className, \"edit-text-box\");\r\n    updateBtn.classList.add(\"send-update-btn\");\r\n    textAreaEl.rows = \"3\";\r\n    textAreaEl.value = paragraphEl.lastChild.nodeValue;\r\n    updateBtn.textContent = \"UPDATE\";\r\n\r\n    updateBtn.addEventListener('click', e => {\r\n      updateComment(mainParent, textAreaEl, paragraphEl, respondedTo, updateBtn);\r\n    });\r\n\r\n    mainParent.replaceChild(textAreaEl, paragraphEl);\r\n    mainParent.appendChild(updateBtn);\r\n  }\r\n}\r\n// Insert the edited user's comment\r\nfunction updateComment(mainParent, textAreaEl, paragraphEl, respondedTo, updateBtn){\r\n  mainParent.classList.remove('card--edit');\r\n  paragraphEl.innerHTML = `<span class=\"respondedUser\">${respondedTo.textContent}</span> ` + textAreaEl.value;\r\n\r\n  saveScorContent(mainParent, textAreaEl.value, true);\r\n\r\n  mainParent.replaceChild(paragraphEl, textAreaEl);\r\n  mainParent.removeChild(updateBtn);\r\n}\r\n//Delete comment or not\r\nfunction deleteComment(){\r\n  const removeElement = rmElement.parentElement;\r\n  const trueOrFalse = this.dataset.remove;\r\n  document.body.querySelector('.overlay').classList.remove('open');\r\n\r\n  if (trueOrFalse === \"true\"){\r\n    saveScorContent(rmElement);\r\n    --createdAtId;\r\n    removeElement.remove();\r\n    scoreList.splice(rmScore, 1);\r\n  }\r\n}\r\n//Event listener func for the send/reply button element\r\nfunction postListener(e, replyTo){\r\n    const listOfScores = Array.from(document.body.querySelectorAll('.score'));\r\n    const parent = e.currentTarget.parentElement;\r\n    const checkValue = parent.querySelector(\"textarea\").value;\r\n    let commentContainer = parent.closest('.flow') || null;\r\n    const scoreBtns = commentContainer && commentContainer.querySelectorAll('.score');\r\n    const sepratorBar = parent.parentElement.querySelector(\".separation-bar\") || null;\r\n    const lastScore = commentContainer ? scoreBtns[scoreBtns.length - 1] : listOfScores[listOfScores.length - 1];\r\n\r\n    if(checkValue){\r\n      scoreList.splice(listOfScores.indexOf(lastScore) + 1, 0, 0);\r\n      if(commentContainer){\r\n        parent.parentElement.removeChild(parent);\r\n        sepratorBar ? sepratorBar.style.gridRow = \"1 / 2\" : \"\";\r\n      }else{\r\n        commentContainer = mainContainer;\r\n      }\r\n      \r\n      postUserComment(checkValue, commentContainer, replyTo);\r\n    }\r\n}\r\nfunction saveComment(container, id, replyingTo, content, image, username){\r\n  const score = 0;\r\n  const user = {\"image\": {\"webp\": image}, \"username\": username};\r\n  const listOfComments = JSON.parse(localStorage.getItem('comments'));\r\n\r\n  if(container.parentElement === mainContainer){\r\n    listOfComments.comments.push({id, content, score, user});\r\n  }else{\r\n    listOfComments.comments[container.parentElement.dataset.id - 1].replies.push({id, content, score, replyingTo, user});\r\n  }\r\n\r\n  localStorage.setItem(\"comments\", JSON.stringify(listOfComments));\r\n}\r\n// Update a comment's score/content in local Storage\r\nfunction saveScorContent(commentScored, scoreContent, update){\r\n  let commentsData = JSON.parse(localStorage.getItem('comments'));\r\n  const commentsTime = JSON.parse(localStorage.getItem('createdAt'));\r\n  const commentIndex = parseInt(commentScored.parentElement.dataset.id);\r\n\r\n  if(!commentScored.closest('.nested-inputBox')){\r\n    if(update && scoreContent){\r\n      commentsData.comments.find(comment => comment.id === commentIndex).content = scoreContent;\r\n    }else if (scoreContent){\r\n      commentsData.comments.find(comment => comment.id === commentIndex).score = parseInt(scoreContent);\r\n    }else{\r\n      const removeElement = commentsData.comments.find(comment => comment.id == commentIndex);\r\n      commentsData.comments.splice(commentsData.comments.indexOf(removeElement), 1);\r\n      commentsTime.splice(commentIndex - 1, 1);\r\n      commentsData = updateIdsOnDel(commentIndex, commentsData);\r\n        \r\n    }\r\n  }else{\r\n    const mainCommentId =  commentsData.comments.find(comment => comment.id == commentScored.parentElement.parentElement.dataset.id );\r\n    if(update && scoreContent){\r\n      commentsData.comments[commentsData.comments.indexOf(mainCommentId)].replies.find(comment => comment.id == commentIndex).content = scoreContent;\r\n    }else if (scoreContent){\r\n      commentsData.comments[commentsData.comments.indexOf(mainCommentId)].replies.find(comment => comment.id == commentIndex).score = parseInt(scoreContent);\r\n    }else{\r\n      const mainCommentId =  commentsData.comments.find(comment => comment.id == commentScored.parentElement.parentElement.dataset.id );\r\n      const removeElement = commentsData.comments[commentsData.comments.indexOf(mainCommentId)].replies.find(reply => reply.id == commentIndex);\r\n      const elementIndex = commentsData.comments[commentsData.comments.indexOf(mainCommentId)].replies.indexOf(removeElement);\r\n\r\n      commentsTime.splice(commentIndex - 1, 1);\r\n      commentsData.comments[commentsData.comments.indexOf(mainCommentId)].replies.splice(elementIndex, 1);\r\n      commentsData = updateIdsOnDel(commentIndex, commentsData);\r\n    }\r\n  }\r\n\r\n  localStorage.setItem(\"comments\", JSON.stringify(commentsData));\r\n  localStorage.setItem(\"createdAt\", JSON.stringify(commentsTime))\r\n}\r\n// Add/save comment posting time for every comment on their first page load \r\nfunction createDate(name){\r\n  const dateTerms = [\r\n    \"second\",\r\n    \"minute\",\r\n    \"hour\",\r\n    \"day\",\r\n    \"week\",\r\n    \"month\",\r\n    \"year\"  \r\n  ];\r\n  let postTimes = JSON.parse(localStorage.getItem('createdAt')) || [];\r\n  let elapsedTime = postTimes[name - 1];\r\n  let currentTimeTerm;\r\n  let timePassed;\r\n  let convertedTime;\r\n\r\n  if(elapsedTime){\r\n    timePassed = Math.floor(Date.now() / 1000) - elapsedTime;\r\n\r\n    if(timePassed > 59 && timePassed < 3600){\r\n      convertedTime = Math.floor(timePassed / 60);\r\n      currentTimeTerm = dateTerms[1];\r\n\r\n    }else if (timePassed < 60){\r\n      convertedTime = timePassed;\r\n      currentTimeTerm = dateTerms[0];\r\n    }\r\n    \r\n    if(timePassed > 3599 && timePassed < 86400){\r\n      convertedTime = Math.floor(timePassed / 3600);\r\n      currentTimeTerm = dateTerms[2];\r\n    }\r\n    \r\n    if(timePassed > 86399){\r\n      convertedTime = Math.floor(timePassed / 86400);\r\n      currentTimeTerm = dateTerms[3];\r\n    }\r\n\r\n  } else{\r\n    postTimes.push(Math.floor(Date.now() / 1000));\r\n    localStorage.setItem(\"createdAt\", JSON.stringify(postTimes));\r\n  }\r\n\r\n  if(convertedTime > 1){\r\n    convertedTime = `${convertedTime} ${currentTimeTerm}s ago`;\r\n  }else{\r\n    convertedTime = `${convertedTime} ${currentTimeTerm} ago`;\r\n  }\r\n\r\n  return elapsedTime ? convertedTime : `0 ${dateTerms[0]} ago`;\r\n}\r\n//Update comments'ids in local Storage & html elements\r\nfunction updateIdsOnDel(idDeleted, usersComments){\r\n  const idElements = document.querySelectorAll(\"[data-id]\");\r\n\r\n  usersComments.comments.forEach(comment => {\r\n    const replies = comment.replies || null;\r\n    if (comment.id > idDeleted){\r\n      comment.id -= 1;\r\n    };\r\n    if(replies){\r\n      replies.forEach(reply => {\r\n        if(reply.id > idDeleted){\r\n          reply.id -= 1;\r\n        }\r\n      })\r\n    }\r\n  });\r\n  idElements.forEach(element => {\r\n    if (element.dataset.id > idDeleted){\r\n      element.dataset.id = parseInt(element.dataset.id) - 1;\r\n    }\r\n  });\r\n  return usersComments;\r\n}"]}